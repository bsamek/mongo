diff --git a/SConstruct b/SConstruct
index 5adac22..9449a36 100644
--- a/SConstruct
+++ b/SConstruct
@@ -2120,11 +2120,27 @@ def doConfigure(myenv):
         context.Result(ret)
         return ret
 
+    
+    def CheckStrnlen(context):
+        test_body = """
+        #include <cstring>
+        int main(int argc, char **argv) {
+            ::strnlen("foobar", 2);
+            return 0;
+        }
+        """
+        context.Message('Checking for strnlen(3)... ')
+        ret = context.TryCompile(textwrap.dedent(test_body), '.cpp')
+        context.Result(ret)
+        return ret
+
+
     conf = Configure(myenv, help=False, custom_tests = {
         'CheckCXX11Atomics': CheckCXX11Atomics,
         'CheckGCCAtomicBuiltins': CheckGCCAtomicBuiltins,
         'CheckGCCSyncBuiltins': CheckGCCSyncBuiltins,
         'CheckCXX11IsTriviallyCopyable': CheckCXX11IsTriviallyCopyable,
+        'CheckStrnlen': CheckStrnlen,
     })
 
     # Figure out what atomics mode to use by way of the tests defined above.
@@ -2158,6 +2174,10 @@ def doConfigure(myenv):
     if (cxx11_mode == "on") and conf.CheckCXX11IsTriviallyCopyable():
         conf.env.Append(CPPDEFINES=['MONGO_HAVE_STD_IS_TRIVIALLY_COPYABLE'])
 
+    if conf.CheckStrnlen():
+        conf.env.Append(CPPDEFINES=['MONGO_HAVE_STRNLEN'])
+    
+
     myenv = conf.Finish()
 
     conf = Configure(myenv)
diff --git a/src/mongo/bson/bsonelement.cpp b/src/mongo/bson/bsonelement.cpp
index edc2489..80f8667 100644
--- a/src/mongo/bson/bsonelement.cpp
+++ b/src/mongo/bson/bsonelement.cpp
@@ -40,6 +40,7 @@
 #include "mongo/util/hex.h"
 #include "mongo/util/log.h"
 #include "mongo/util/mongoutils/str.h"
+#include "mongo/platform/strnlen.h"
 
 namespace mongo {
 namespace str = mongoutils::str;
diff --git a/src/mongo/bson/bsonelement.h b/src/mongo/bson/bsonelement.h
index d0b972a..f95dc1e 100644
--- a/src/mongo/bson/bsonelement.h
+++ b/src/mongo/bson/bsonelement.h
@@ -38,6 +38,7 @@
 #include "mongo/client/export_macros.h"
 #include "mongo/platform/cstdint.h"
 #include "mongo/platform/float_utils.h"
+#include "mongo/platform/strnlen.h"
 
 namespace mongo {
 class OpTime;
diff --git a/src/mongo/db/storage/key_string.cpp b/src/mongo/db/storage/key_string.cpp
index e819b24..f801486 100644
--- a/src/mongo/db/storage/key_string.cpp
+++ b/src/mongo/db/storage/key_string.cpp
@@ -41,6 +41,7 @@
 #include "mongo/platform/bits.h"
 #include "mongo/util/hex.h"
 #include "mongo/util/log.h"
+#include "mongo/platform/strnlen.h"
 
 namespace mongo {
 
diff --git a/src/mongo/db/storage/mmap_v1/dur_recover.cpp b/src/mongo/db/storage/mmap_v1/dur_recover.cpp
index d0e461e..f9c7b43 100644
--- a/src/mongo/db/storage/mmap_v1/dur_recover.cpp
+++ b/src/mongo/db/storage/mmap_v1/dur_recover.cpp
@@ -55,6 +55,7 @@
 #include "mongo/util/log.h"
 #include "mongo/util/mongoutils/str.h"
 #include "mongo/util/startup_test.h"
+#include "mongo/platform/strnlen.h"
 
 namespace mongo {
 
diff --git a/src/mongo/platform/SConscript b/src/mongo/platform/SConscript
index 8471714..dfc4df4 100644
--- a/src/mongo/platform/SConscript
+++ b/src/mongo/platform/SConscript
@@ -8,6 +8,7 @@ env.Library('platform', [
         'process_id.cpp',
         'random.cpp',
         'strcasestr.cpp',
+        'strnlen.cpp',
         ])
 
 env.CppUnitTest('atomic_word_test', 'atomic_word_test.cpp')
diff --git a/src/mongo/platform/strnlen.cpp b/src/mongo/platform/strnlen.cpp
new file mode 100644
index 0000000..5f432ec
--- /dev/null
+++ b/src/mongo/platform/strnlen.cpp
@@ -0,0 +1,45 @@
+/*    Copyright 2015 MongoDB Inc.
+ *
+ *    This program is free software: you can redistribute it and/or  modify
+ *    it under the terms of the GNU Affero General Public License, version 3,
+ *    as published by the Free Software Foundation.
+ *
+ *    This program is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *    GNU Affero General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Affero General Public License
+ *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *    As a special exception, the copyright holders give permission to link the
+ *    code of portions of this program with the OpenSSL library under certain
+ *    conditions as described in each individual source file and distribute
+ *    linked combinations including the program with the OpenSSL library. You
+ *    must comply with the GNU Affero General Public License in all respects
+ *    for all of the code used other than as permitted herein. If you modify
+ *    file(s) with this exception, you may extend this exception to your
+ *    version of the file(s), but you are not obligated to do so. If you do not
+ *    wish to do so, delete this exception statement from your version. If you
+ *    delete this exception statement from all source files in the program,
+ *    then also delete it in the license file.
+*/
+
+#include "mongo/platform/strnlen.h"
+
+#ifndef MONGO_HAVE_STRNLEN
+
+namespace mongo {
+
+    size_t strnlen(const char *s, size_t maxlen) {
+        for (size_t i = 0; i < maxlen; ++i) {
+            if (s[i] == '\0') {
+                return i;
+            }
+        }
+        return maxlen;
+    }
+
+}  // namespace mongo
+
+#endif
diff --git a/src/mongo/platform/strnlen.h b/src/mongo/platform/strnlen.h
new file mode 100644
index 0000000..a2bd2a3
--- /dev/null
+++ b/src/mongo/platform/strnlen.h
@@ -0,0 +1,41 @@
+/*    Copyright 2015 MongoDB Inc.
+ *
+ *    This program is free software: you can redistribute it and/or  modify
+ *    it under the terms of the GNU Affero General Public License, version 3,
+ *    as published by the Free Software Foundation.
+ *
+ *    This program is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *    GNU Affero General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Affero General Public License
+ *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *    As a special exception, the copyright holders give permission to link the
+ *    code of portions of this program with the OpenSSL library under certain
+ *    conditions as described in each individual source file and distribute
+ *    linked combinations including the program with the OpenSSL library. You
+ *    must comply with the GNU Affero General Public License in all respects
+ *    for all of the code used other than as permitted herein. If you modify
+ *    file(s) with this exception, you may extend this exception to your
+ *    version of the file(s), but you are not obligated to do so. If you do not
+ *    wish to do so, delete this exception statement from your version. If you
+ *    delete this exception statement from all source files in the program,
+ *    then also delete it in the license file.
+ */
+
+#pragma once
+
+#include <cstddef>
+#include <cstring>
+
+namespace mongo {
+
+#ifdef MONGO_HAVE_STRNLEN
+    using ::strnlen;
+#else
+    size_t strnlen(const char *s, size_t maxlen);
+#endif
+
+}  // namespace mongo
diff --git a/src/mongo/util/bufreader.h b/src/mongo/util/bufreader.h
index bc31d30..5394d93 100644
--- a/src/mongo/util/bufreader.h
+++ b/src/mongo/util/bufreader.h
@@ -34,6 +34,7 @@
 
 #include "mongo/bson/util/builder.h"
 #include "mongo/util/assert_util.h"
+#include "mongo/platform/strnlen.h"
 
 namespace mongo {
 
